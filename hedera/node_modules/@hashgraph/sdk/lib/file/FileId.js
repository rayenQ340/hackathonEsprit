import{constructor as t,fromString as r,validateChecksum as s,fromSolidityAddress as e,toSolidityAddress as i,toStringWithChecksum as n,compare as o}from"../EntityIdHelper.js";import*as m from"@hashgraph/proto";import h from"long";class u{constructor(r,s,e){const i=t(r,s,e);this.shard=i.shard,this.realm=i.realm,this.num=i.num,this._checksum=null}static fromString(t){const s=r(t),e=new u(s);return e._checksum=s.checksum,e}static _fromProtobuf(t){return new u(null!=t.shardNum?h.fromString(t.shardNum.toString()):0,null!=t.realmNum?h.fromString(t.realmNum.toString()):0,null!=t.fileNum?h.fromString(t.fileNum.toString()):0)}get checksum(){return this._checksum}validate(t){console.warn("Deprecated: Use `validateChecksum` instead"),this.validateChecksum(t)}validateChecksum(t){s(this.shard,this.realm,this.num,this._checksum,t)}static fromBytes(t){return u._fromProtobuf(m.proto.FileID.decode(t))}static fromSolidityAddress(t){const[r,s,i]=e(t);return new u(r,s,i)}toSolidityAddress(){return i([this.shard,this.realm,this.num])}_toProtobuf(){return{fileNum:this.num,shardNum:this.shard,realmNum:this.realm}}toString(){return`${this.shard.toString()}.${this.realm.toString()}.${this.num.toString()}`}toStringWithChecksum(t){return n(this.toString(),t)}toBytes(){return m.proto.FileID.encode(this._toProtobuf()).finish()}clone(){const t=new u(this);return t._checksum=this._checksum,t}compare(t){return o([this.shard,this.realm,this.num],[t.shard,t.realm,t.num])}}u.ADDRESS_BOOK=new u(102),u.FEE_SCHEDULE=new u(111),u.EXCHANGE_RATES=new u(112);export{u as default};
//# sourceMappingURL=FileId.js.map
