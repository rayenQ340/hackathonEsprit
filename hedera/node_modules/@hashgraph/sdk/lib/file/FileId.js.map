{"version":3,"file":"FileId.js","sources":["../../src/file/FileId.js"],"sourcesContent":["// SPDX-License-Identifier: Apache-2.0\n\nimport * as entity_id from \"../EntityIdHelper.js\";\nimport * as HieroProto from \"@hashgraph/proto\";\nimport Long from \"long\";\n\n/**\n * @typedef {import(\"../client/Client.js\").default<*, *>} Client\n */\n\n/**\n * The ID for a crypto-currency file on Hedera.\n */\nexport default class FileId {\n    /**\n     * @param {number | Long | import(\"../EntityIdHelper\").IEntityId} props\n     * @param {(number | Long)=} realm\n     * @param {(number | Long)=} num\n     */\n    constructor(props, realm, num) {\n        const result = entity_id.constructor(props, realm, num);\n\n        this.shard = result.shard;\n        this.realm = result.realm;\n        this.num = result.num;\n\n        /**\n         * @type {string | null}\n         */\n        this._checksum = null;\n    }\n\n    /**\n     * @param {string} text\n     * @returns {FileId}\n     */\n    static fromString(text) {\n        const result = entity_id.fromString(text);\n        const id = new FileId(result);\n        id._checksum = result.checksum;\n        return id;\n    }\n\n    /**\n     * @internal\n     * @param {HieroProto.proto.IFileID} id\n     * @returns {FileId}\n     */\n    static _fromProtobuf(id) {\n        const fileId = new FileId(\n            id.shardNum != null ? Long.fromString(id.shardNum.toString()) : 0,\n            id.realmNum != null ? Long.fromString(id.realmNum.toString()) : 0,\n            id.fileNum != null ? Long.fromString(id.fileNum.toString()) : 0,\n        );\n\n        return fileId;\n    }\n\n    /**\n     * @returns {string | null}\n     */\n    get checksum() {\n        return this._checksum;\n    }\n\n    /**\n     * @deprecated - Use `validateChecksum` instead\n     * @param {Client} client\n     */\n    validate(client) {\n        console.warn(\"Deprecated: Use `validateChecksum` instead\");\n        this.validateChecksum(client);\n    }\n\n    /**\n     * @param {Client} client\n     */\n    validateChecksum(client) {\n        entity_id.validateChecksum(\n            this.shard,\n            this.realm,\n            this.num,\n            this._checksum,\n            client,\n        );\n    }\n\n    /**\n     * @param {Uint8Array} bytes\n     * @returns {FileId}\n     */\n    static fromBytes(bytes) {\n        return FileId._fromProtobuf(HieroProto.proto.FileID.decode(bytes));\n    }\n\n    /**\n     * @param {string} address\n     * @returns {FileId}\n     */\n    static fromSolidityAddress(address) {\n        const [shard, realm, file] = entity_id.fromSolidityAddress(address);\n        return new FileId(shard, realm, file);\n    }\n\n    /**\n     * @returns {string} solidity address\n     */\n    toSolidityAddress() {\n        return entity_id.toSolidityAddress([this.shard, this.realm, this.num]);\n    }\n\n    /**\n     * @internal\n     * @returns {HieroProto.proto.IFileID}\n     */\n    _toProtobuf() {\n        return {\n            fileNum: this.num,\n            shardNum: this.shard,\n            realmNum: this.realm,\n        };\n    }\n\n    /**\n     * @returns {string}\n     */\n    toString() {\n        return `${this.shard.toString()}.${this.realm.toString()}.${this.num.toString()}`;\n    }\n\n    /**\n     * @param {Client} client\n     * @returns {string}\n     */\n    toStringWithChecksum(client) {\n        return entity_id.toStringWithChecksum(this.toString(), client);\n    }\n\n    /**\n     * @returns {Uint8Array}\n     */\n    toBytes() {\n        return HieroProto.proto.FileID.encode(this._toProtobuf()).finish();\n    }\n\n    /**\n     * @returns {FileId}\n     */\n    clone() {\n        const id = new FileId(this);\n        id._checksum = this._checksum;\n        return id;\n    }\n\n    /**\n     * @param {FileId} other\n     * @returns {number}\n     */\n    compare(other) {\n        return entity_id.compare(\n            [this.shard, this.realm, this.num],\n            [other.shard, other.realm, other.num],\n        );\n    }\n}\n\n/**\n * The public node address book for the current network.\n */\nFileId.ADDRESS_BOOK = new FileId(102);\n\n/**\n * The current fee schedule for the network.\n */\nFileId.FEE_SCHEDULE = new FileId(111);\n\n/**\n * The current exchange rate of HBAR to USD.\n */\nFileId.EXCHANGE_RATES = new FileId(112);\n"],"names":["FileId","constructor","props","realm","num","result","entity_id.constructor","this","shard","_checksum","fromString","text","entity_id.fromString","id","checksum","_fromProtobuf","shardNum","Long","toString","realmNum","fileNum","validate","client","console","warn","validateChecksum","entity_id.validateChecksum","fromBytes","bytes","HieroProto","proto","FileID","decode","fromSolidityAddress","address","file","entity_id.fromSolidityAddress","toSolidityAddress","entity_id.toSolidityAddress","_toProtobuf","toStringWithChecksum","entity_id.toStringWithChecksum","toBytes","encode","finish","clone","compare","other","entity_id.compare","ADDRESS_BOOK","FEE_SCHEDULE","EXCHANGE_RATES"],"mappings":"uOAae,MAAMA,EAMjB,WAAAC,CAAYC,EAAOC,EAAOC,GACtB,MAAMC,EAASC,EAAsBJ,EAAOC,EAAOC,GAEnDG,KAAKC,MAAQH,EAAOG,MACpBD,KAAKJ,MAAQE,EAAOF,MACpBI,KAAKH,IAAMC,EAAOD,IAKlBG,KAAKE,UAAY,IACzB,CAMI,iBAAOC,CAAWC,GACd,MAAMN,EAASO,EAAqBD,GAC9BE,EAAK,IAAIb,EAAOK,GAEtB,OADAQ,EAAGJ,UAAYJ,EAAOS,SACfD,CACf,CAOI,oBAAOE,CAAcF,GAOjB,OANe,IAAIb,EACA,MAAfa,EAAGG,SAAmBC,EAAKP,WAAWG,EAAGG,SAASE,YAAc,EACjD,MAAfL,EAAGM,SAAmBF,EAAKP,WAAWG,EAAGM,SAASD,YAAc,EAClD,MAAdL,EAAGO,QAAkBH,EAAKP,WAAWG,EAAGO,QAAQF,YAAc,EAI1E,CAKI,YAAIJ,GACA,OAAOP,KAAKE,SACpB,CAMI,QAAAY,CAASC,GACLC,QAAQC,KAAK,8CACbjB,KAAKkB,iBAAiBH,EAC9B,CAKI,gBAAAG,CAAiBH,GACbI,EACInB,KAAKC,MACLD,KAAKJ,MACLI,KAAKH,IACLG,KAAKE,UACLa,EAEZ,CAMI,gBAAOK,CAAUC,GACb,OAAO5B,EAAOe,cAAcc,EAAWC,MAAMC,OAAOC,OAAOJ,GACnE,CAMI,0BAAOK,CAAoBC,GACvB,MAAO1B,EAAOL,EAAOgC,GAAQC,EAA8BF,GAC3D,OAAO,IAAIlC,EAAOQ,EAAOL,EAAOgC,EACxC,CAKI,iBAAAE,GACI,OAAOC,EAA4B,CAAC/B,KAAKC,MAAOD,KAAKJ,MAAOI,KAAKH,KACzE,CAMI,WAAAmC,GACI,MAAO,CACHnB,QAASb,KAAKH,IACdY,SAAUT,KAAKC,MACfW,SAAUZ,KAAKJ,MAE3B,CAKI,QAAAe,GACI,MAAO,GAAGX,KAAKC,MAAMU,cAAcX,KAAKJ,MAAMe,cAAcX,KAAKH,IAAIc,YAC7E,CAMI,oBAAAsB,CAAqBlB,GACjB,OAAOmB,EAA+BlC,KAAKW,WAAYI,EAC/D,CAKI,OAAAoB,GACI,OAAOb,EAAWC,MAAMC,OAAOY,OAAOpC,KAAKgC,eAAeK,QAClE,CAKI,KAAAC,GACI,MAAMhC,EAAK,IAAIb,EAAOO,MAEtB,OADAM,EAAGJ,UAAYF,KAAKE,UACbI,CACf,CAMI,OAAAiC,CAAQC,GACJ,OAAOC,EACH,CAACzC,KAAKC,MAAOD,KAAKJ,MAAOI,KAAKH,KAC9B,CAAC2C,EAAMvC,MAAOuC,EAAM5C,MAAO4C,EAAM3C,KAE7C,EAMAJ,EAAOiD,aAAe,IAAIjD,EAAO,KAKjCA,EAAOkD,aAAe,IAAIlD,EAAO,KAKjCA,EAAOmD,eAAiB,IAAInD,EAAO"}