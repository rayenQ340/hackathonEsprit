"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _Cache = _interopRequireDefault(require("../Cache.cjs"));
var _ContractId = _interopRequireDefault(require("./ContractId.cjs"));
var hex = _interopRequireWildcard(require("../encoding/hex.cjs"));
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
// SPDX-License-Identifier: Apache-2.0

/**
 * @namespace {proto}
 * @typedef {import("@hashgraph/proto").proto.IContractID} HieroProto.proto.IContractID
 * @typedef {import("@hashgraph/proto").proto.IKey} HieroProto.proto.IKey
 */

/**
 * @typedef {import("long")} Long
 * @typedef {import("../client/Client.js").default<*, *>} Client
 */

/**
 * epresents a delegatable smart contract ID on the Hedera network.
 * This class extends ContractId and provides additional functionality for delegatable contracts.
 */
class DelegateContractId extends _ContractId.default {
  /**
   * @param {number | Long | import("../EntityIdHelper").IEntityId} props
   * @param {(number | Long)=} realm
   * @param {(number | Long)=} num
   * @param {Uint8Array=} evmAddress
   */
  constructor(props, realm, num, evmAddress) {
    super(props, realm, num, evmAddress);
  }

  /**
   * @param {Long | number} shard
   * @param {Long | number} realm
   * @param {string} evmAddress
   * @returns {ContractId}
   */
  static fromEvmAddress(shard, realm, evmAddress) {
    return new DelegateContractId(shard, realm, 0, hex.decode(evmAddress));
  }

  /**
   * @param {string} text
   * @returns {DelegateContractId}
   */
  static fromString(text) {
    return new DelegateContractId(_ContractId.default.fromString(text));
  }

  /**
   * @internal
   * @param {HieroProto.proto.IContractID} id
   * @returns {DelegateContractId}
   */
  static _fromProtobuf(id) {
    return new DelegateContractId(_ContractId.default._fromProtobuf(id));
  }

  /**
   * @param {Uint8Array} bytes
   * @returns {DelegateContractId}
   */
  static fromBytes(bytes) {
    return new DelegateContractId(_ContractId.default.fromBytes(bytes));
  }

  /**
   * @param {string} address
   * @returns {DelegateContractId}
   */
  static fromSolidityAddress(address) {
    // eslint-disable-next-line deprecation/deprecation
    return new DelegateContractId(_ContractId.default.fromSolidityAddress(address));
  }

  /**
   * @returns {DelegateContractId}
   */
  clone() {
    const id = new DelegateContractId(this);
    id._checksum = this._checksum;
    return id;
  }

  /**
   * @returns {HieroProto.proto.IKey}
   */
  _toProtobufKey() {
    return {
      delegatableContractId: this._toProtobuf()
    };
  }

  /**
   * @param {HieroProto.proto.IContractID} key
   * @returns {DelegateContractId}
   */
  static __fromProtobufKey(key) {
    return DelegateContractId._fromProtobuf(key);
  }
}
exports.default = DelegateContractId;
_Cache.default.setDelegateContractId(key => DelegateContractId.__fromProtobufKey(key));